<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hot6.project.dao.StudyDetailDAO">
	<select id="studydetail" resultType="StudyVO">
        select study_img, study_name, study_rule, host_id, b.user_nick, max, b.profile_img, b.permission, c.level_icon
        from study_room a 
        join user b 
        on b.user_id = a.host_id
        join level c
        on    c.exp_min <![CDATA[<=]]> b.exp
        AND b.exp <![CDATA[<=]]> c.exp_max
        where study_num=#{param1}
    </select>
	<select id="studyuser" resultType="StudyVO">
		select A.want_ok, A.want_coment, B.user_nick, B.profile_img
		from study_mate A join user B on A.user_id=B.user_id 
		where study_num=#{param1} and want_ok="T" 
		<!-- SELECT 	A.want_ok, A.want_coment, B.user_id, B.user_nick
		FROM 	study_mate A 
		JOIN 	user B 
		ON 		A.user_id=B.user_id 
		WHERE 	study_num=#{param1} AND want_ok="T"  -->
	</select>
	<!-- select is_mentor, s.study_type_num, lang_type_name, study_img, study_name, host_id, start_date, finish_date, max
		from study_room s join study_type t
		on s.study_type_num = t.study_type_num
		join study_lang_type sl
		on sl.study_num = s.study_num
		join lang_type l
		on l.lang_type_num=sl.lang_type_num
		where s.study_num=#{param1}
		order by study_type_name-->
		
	<select id="studyRoom" resultType="StudyVO">
		select study_img, study_name, study_rule, host_id 
		from study_room where study_num=#{param1}
	</select>
	<select id="mateList" resultType="StudyVO">
		select A.user_id, B.user_nick, IFNULL(C.contribute,0) AS contribute
        from study_mate A
        join user B
        on A.user_id=B.user_id
        join (select user_id, count(board_num) AS contribute from board where study_num=#{param1} group by user_id) C
        on C.user_id = A.user_id
        group by C.user_id 
        ORDER BY contribute DESC
	</select>
	<!-- 좋아요 누르기 -->
	<insert id='LikeUp'>
	    insert study_like(user_id, study_num) values (#{param1}, #{param2})
	</insert>
	<!-- 좋아요 취소 -->
	<delete id='LikeDown'>
	   	delete from study_like
	   	where user_id=#{param1} and study_num=#{param2}
	</delete>
	<select id="LikeDetail" resultType="StudyVO">
		SELECT 	 B.user_id, C.study_num,
					COUNT( case when ifnull(C.user_id, 0)= #{param1} then 1 end) AS like_type,
					COUNT(C.user_id) AS like_num
		from	user B
		LEFT JOIN 	study_like C
		ON			B.user_id=C.user_id
		WHERE 		C.study_num = #{param2}
		GROUP BY 	C.study_num
	</select>
	<select id="applyList" resultType="StudyVO">
		select A.*, B.user_nick, B.profile_img, C.host_id
        from study_mate A
        join user B
        on B.user_id = A.user_id
        join study_room C
        on C.study_num=A.study_num
        where A.study_num=#{param1}
	</select>
	<!-- 댓글 작성 -->
	<insert id='applyWrite'>
		INSERT 	study_mate(study_num, user_id, want_coment) 
		VALUES	(#{study_num}, #{user_id}, #{want_coment})
	</insert>
	<!-- 댓글 삭제 -->
	<delete id="applyDel">
		DELETE 	FROM study_mate
		WHERE 	want_num=#{param1}
	</delete>
	<!-- 댓글 수정폼 -->
	<select id="getOneReply" resultType="StudyVO">
		SELECT 	* 
		FROM 	study_mate 
		WHERE 	want_num = #{param1}
	</select>
	<!-- 댓글 수정 -->
	<update id="applyEditOk">
		UPDATE 	study_mate 
		SET 	want_coment=#{want_coment} 
		WHERE 	want_num=#{want_num}
	</update>
	<!-- 신청 수락 -->
	<update id="ApplySelect">
		UPDATE 	study_mate 
		SET 	want_ok='T' 
		WHERE 	want_num=#{want_num}
	</update>
	<!-- 스터디원 강퇴 -->
	<update id="ApplySelectDel">
		UPDATE 	study_mate 
		SET 	want_ok='F' 
		WHERE 	want_num=#{want_num}
	</update>
</mapper>