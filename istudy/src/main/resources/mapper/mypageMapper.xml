<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.hot6.project.dao.MypageDAO">
  
  	<!-- 진행 중인 스터디 -->
  	<select id="joinStudy" resultType="StudyVO">
		SELECT  DISTINCT study_room.study_img, study_room.study_num, study_room.start_date, study_room.finish_date, study_room.study_name, study_room.host_id, study_type.study_type_name, study_mate.user_id 
		FROM study_room INNER JOIN study_type ON study_room.study_type_num = study_type.study_type_num AND date(now()) <![CDATA[<]]> finish_date
		INNER JOIN study_mate ON study_mate.study_num= study_room.study_num WHERE user_id= #{param1} or host_id=#{param1} GROUP BY study_num
	</select>
	
	<!-- 완료된 스터디 -->
	<select id="finishStudy" resultType="StudyVO">
		SELECT  DISTINCT study_room.study_img, study_room.study_num, study_room.start_date, study_room.finish_date, study_room.study_name, study_room.host_id, study_type.study_type_name, study_mate.user_id 
		FROM study_room INNER JOIN study_type ON  study_room.study_type_num = study_type.study_type_num AND date(now()) <![CDATA[>=]]> finish_date
		INNER join study_mate ON study_mate.study_num= study_room.study_num WHERE user_id= #{param1} or host_id=#{param1} GROUP BY study_num
	</select>
	
	<!-- 작성한 글 보기 -->
	<select id="getArticles" resultType="BoardVO">
		SELECT board.title, board_type.board_type_name, date_format(board.write_date,'%Y.%m.%d') AS write_date, board.board_num, board.board_type_num
		FROM board INNER JOIN board_type
		ON board.board_type_num = board_type.board_type_num AND user_id=#{param1}
	</select>
	
	<!-- 댓글 보기 -->
	<select id="getComments" resultType="BoardVO">
		SELECT reply.reply_coment, board.title, board_type.board_type_name, date_format(reply.reply_date, '%Y.%m.%d') AS reply_date, 
		board.board_num, board.board_type_num, reply.reply_num
		FROM board INNER JOIN reply
		ON reply.board_num = board.board_num AND reply.user_id=#{param1}
		INNER JOIN board_type ON board.board_type_num = board_type.board_type_num
	</select>
	
	<!-- 진행 중인 스터디 개수 -->
	<select id="cntJoinStudy" resultType="int">
		SELECT count(study_room.study_name) 
		FROM study_room INNER JOIN study_type
		ON study_room.study_type_num = study_type.study_type_num AND date(now()) <![CDATA[<]]> finish_date
		INNER JOIN study_mate ON study_mate.study_num= study_room.study_num WHERE user_id=#{param1} or host_id=#{param1}
	</select>
	
	<!-- 완료된 스터디 개수 -->
	<select id="cntFinishStudy" resultType="int">
		SELECT count(study_room.study_name) 
		FROM study_room INNER JOIN study_type
		ON study_room.study_type_num = study_type.study_type_num AND date(now()) <![CDATA[>=]]> finish_date
		INNER JOIN study_mate ON study_mate.study_num= study_room.study_num WHERE user_id=#{param1} or host_id=#{param1}
	</select>
	
	<!-- 작성한 글 개수 -->
	<select id="cntArticle" resultType="int">
		SELECT count(board.board_num)
		FROM board INNER JOIN board_type
		ON board.board_type_num = board_type.board_type_num AND user_id=#{param1}
	
	</select>
	
	<!-- 댓글 단 개수 -->
	<select id="cntComment" resultType="int">
		SELECT count(reply.reply_num)
		FROM board INNER JOIN reply ON reply.board_num = board.board_num AND reply.user_id=#{param1}
		INNER JOIN board_type ON board.board_type_num = board_type.board_type_num
	</select>
	
	<!-- 찜한 스터디 -->
	<select id="getLikeStudy" resultType="StudyVO">
		SELECT study_room.*, study_type.study_type_name FROM study_room INNER JOIN study_type
		ON study_room.study_type_num = study_type.study_type_num 
		INNER JOIN study_like ON study_like.study_num= study_room.study_num AND study_like.user_id=#{param1}
	</select>
	
	<!-- 닉네임 -->
	<select id="getNickname" resultType="String">
		SELECT 	user_nick 
		FROM 	user 
		WHERE 	user_id=#{param1};
	</select>
	
	<!-- 찜한 스터디 개수 -->
	<select id="cntLikeStudy" resultType="int">
		SELECT 		COUNT(study_room.study_name) 
		FROM 		study_room 
		INNER JOIN 	study_type
		ON 			study_room.study_type_num = study_type.study_type_num 
		INNER JOIN 	study_like 
		ON 			study_like.study_num= study_room.study_num 
		AND 		study_like.user_id=#{param1}
	</select>
	<!-- 레벨아이콘 -->
	<select id='getIcon' resultType='String'>
		select 		A.level_icon
		from 		level A
		LEFT JOIN 	user B
		ON 			A.exp_min <![CDATA[<=]]> B.exp
		AND 		B.exp <![CDATA[<=]]> A.exp_max
		WHERE 		user_id=#{param1}
	</select>
  </mapper>